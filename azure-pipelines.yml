name: $(SemVer)

variables:
  BuildRev: $[counter(format('{0:yyyyMMdd}', pipeline.startTime), 1)]
  ${{ if startsWith( variables['Build.SourceBranch'], 'refs/tags' ) }}:
    SemVer: $[ variables['Build.SourceBranchName'] ]
  ${{ if not( startsWith( variables['Build.SourceBranch'], 'refs/tags' )) }}:
    SemVer: $[format('{0:yyyy}.{0:MM}.{0:dd}-pre{1}', pipeline.startTime, variables.BuildRev)]
  InfoVer: $(Build.SourceVersion)

trigger:
  batch: true
  branches:
    include:
    - master
    - refs/tags/*

pr:
  autoCancel: true
  branches:
    include:
    - master

pool:
  name: Azure Pipelines
  vmImage: windows-2019

jobs:
- job: Build
  displayName: 'Builds, tests & produces artifacts'
  timeoutInMinutes: 10
  cancelTimeoutInMinutes: 5
  steps:
  - task: DotNetCoreCLI@2
    displayName: 'Build'
    inputs:
      command: build
      projects: 'src/*.sln'
      arguments: '-c $(BuildConfiguration) --no-incremental -p:TreatWarningsAsErrors=true -p:Version=$(SemVer) -p:InformationalVersion=$(InfoVer)'
  - task: DotNetCoreCLI@2
    displayName: 'Pack NuPkg'
    inputs:
      command: custom
      custom: pack
      projects: 'src/*.sln'
      arguments: '-c $(BuildConfiguration) --no-build -o $(Build.ArtifactStagingDirectory) -p:Version=$(SemVer) -p:InformationalVersion=$(InfoVer)'
  - task: PublishPipelineArtifact@1
    displayName: 'Publish Artifacts'
    inputs:
      path: '$(Build.ArtifactStagingDirectory)'
      artifact: Artifacts
- deployment: Deploy
  environment: 'Prod'
  displayName: 'Deploys artifacts'
  dependsOn: Build
  condition: and (succeeded(), startsWith( variables['Build.SourceBranch'], 'refs/tags' ))
  timeoutInMinutes: 10
  cancelTimeoutInMinutes: 5
  strategy: 
    runOnce:
      deploy:
        steps:
        - checkout: none
        - task: NuGetCommand@2
          displayName: 'Push Nupkg to AZ Feed'
          inputs:
            command: push
            packagesToPush: '$(Pipeline.Workspace)/**/*.nupkg;!$(Pipeline.Workspace)/**/*.symbols.nupkg'
            publishVstsFeed: 'lab-feed'
            verbosityPush: Normal
        - task: GithubRelease@0
          displayName: 'Upload to GitHub Release'
          inputs:
            gitHubConnection: Foo
            repositoryName: $(Build.Repository.Name)
            action: edit
            tag: $(Build.SourceBranchName)
            assets: '$(Pipeline.Workspace)/**/*.nupkg'