name: $(SemVer)

variables:
  BuildRev: $[counter(format('{0:yyyyMMdd}', pipeline.startTime), 1)]
  ${{ if startsWith( variables['Build.SourceBranch'], 'refs/tags' ) }}:
    SemVer: $[ variables['Build.SourceBranchName'] ]
  ${{ if not( startsWith( variables['Build.SourceBranch'], 'refs/tags' )) }}:
    SemVer: $[format('{0:yyyy}.{0:MM}.{0:dd}-pre{1}', pipeline.startTime, variables.BuildRev)]
  InfoVer: $(Build.SourceVersion)

trigger:
  batch: true
  branches:
    include:
    - master
    - refs/tags/*

pr:
  autoCancel: true
  branches:
    include:
    - master

pool:
  name: Azure Pipelines
  vmImage: windows-2019

stages:
- stage: Build
  jobs:
  - job: Build
    timeoutInMinutes: 10
    cancelTimeoutInMinutes: 5
    steps:
    - task: DotNetCoreCLI@2
      displayName: 'Build Solution'
      inputs:
        command: build
        projects: 'src/*.sln'
        arguments: '-c $(BuildConfiguration) --no-incremental -p:TreatWarningsAsErrors=true -p:Version=$(SemVer) -p:InformationalVersion=$(InfoVer)'

- stage: Deploy
  condition: and (succeeded(), startsWith( variables['Build.SourceBranch'], 'refs/tags' ))
  jobs:
  - job: Deploy
    timeoutInMinutes: 10
    cancelTimeoutInMinutes: 5
    steps:
    - task: DotNetCoreCLI@2
      displayName: 'Pack Nupkg'
      inputs:
        command: custom
        custom: pack
        projects: 'src/*.sln'
        arguments: '-c $(BuildConfiguration) --no-build -o $(Build.ArtifactStagingDirectory) -p:Version=$(SemVer) -p:InformationalVersion=$(InfoVer)'

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'lab-artifact'
  
    - task: NuGetCommand@2
      displayName: 'Push Nupkg to AZ Artifacts'
      enabled: false
      inputs:
        command: push
        packagesToPush: '$(Build.ArtifactStagingDirectory)/*.nupkg;!$(Build.ArtifactStagingDirectory)/*.symbols.nupkg'
        publishVstsFeed: 'lab-feed'
        verbosityPush: Normal